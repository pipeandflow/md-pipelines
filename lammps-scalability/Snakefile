from snakemake.utils import min_version
min_version("7.20.0")

configfile: "config.yaml"

print(config)
#----------------------------------------------------------------
localrules: all, plot_scalability, prepare_input_for_lammps
workdir: "/hirshblab-storage/yotamfe1/lammps-scalability-snake"

rule all:
    input:
        "boson_scalabilty.png"


rule plot_scalability:
    input:
        expand("results/{num_bosons}_{lmp}_bosons_timing.dat", num_bosons=config['boson_numbers'], lmp=['my', 'base'])
    output:
        rules.all.input
    script:
        "scripts/plot_scalability.py"
    
rule time_boson_lammps_run:
    input:
        "tmp/lammps_{lmp}_input_{num_bosons}_bosons.in"
    output:
        "results/{num_bosons}_{lmp}_bosons_timing.dat"
    log:
        "logs/run_{lmp}_{num_bosons}_bosons.log"
    shadow: "shallow"
    benchmark:
        repeat("benchmarks/lammps-run-{num_bosons}-{lmp}.tsv", config['num_repetitions'])
    threads: config['num_beads']
    params:
        lammps_exe=config['lammps_exe'] if '{lmp}'=='my' else config['baseline_lammps_exe']
    shell:
        """
	touch {output}
	module load gcc/gcc-8.2.0
	module load mpi/openmpi-4.0.5
	mpirun -np {threads} {params.lammps_exe} -partition {threads}x1 -in {input} -screen none
	cat log.lammps.0 | grep 'Loop time of' >> {output}
	cat log.lammps.0 | grep 'Total wall time:' >> {output}
        """


rule prepare_input_for_lammps:
    output:
        rules.time_boson_lammps_run.input
    params:
        num_bosons="{num_bosons}",
	num_beads=config['num_beads'],
	seed=98743501,
	num_steps=1000
    script:
        "scripts/prepare_lammps_noninteracting_single.py"
        
